# Force overwrite of existing configuration files and erase blockchain
force = false

# total number of nodes to configure and launch
nodes = 1

# number of nodes that contain one or more producers
pnodes = 1

# total number of non-bios producer instances in this network
producers = 21

# connection mode, combination of "any", "producers", "specified", "none"
mode = any

# network topology, use "star" "mesh" or give a filename for custom
shape = star

# select a p2p plugin to use (either net or bnet). Defaults to net.
p2p-plugin = net

# set the path to genesis.json
genesis = ./genesis.json

# nodeos does not require transaction signatures.
skip-signature = false

# forward nodeos command line argument(s) to each instance of nodeos, enclose arg(s) in quotes
# nodeos = 

# forward nodeos command line argument(s) (using "--specific-nodeos" flag) to this specific instance of nodeos. This parameter can be entered multiple times and requires a paired "--specific-nodeos" flag
# specific-num = 

# forward nodeos command line argument(s) to its paired specific instance of nodeos(using "--specific-num"), enclose arg(s) in quotes
# specific-nodeos = 

# seconds delay before starting each node after the first
delay = 0

# After deploying the nodes and generating a boot script, invoke it.
boot = false

# launch nodes without writing new config files
nogen = false

# a file containing mapping specific nodes to hosts. Used to enhance the custom shape argument
# host-map = 

# a file containing ip addresses and names of individual servers to deploy as producers or non-producers 
# servers = 

# specifies how many nodeos instances will run on a single host. Use 0 to indicate all on one.
per-host = 0

# network name prefix used in GELF logging source
network-name = testnet_

# enable gelf logging appender in logging configuration file
enable-gelf-logging = 1

# hostname:port or ip:port of GELF endpoint
gelf-endpoint = 10.160.11.21:12201

# the startup script template
template = testnet.template

# the generated startup script name
script = bios_boot.sh

# Provide the "max-block-cpu-usage" value to use in the genesis.json file
# max-block-cpu-usage = 

# Provide the "max-transaction-cpu-usage" value to use in the genesis.json file
# max-transaction-cpu-usage = 

